import{r as e,a as t,b as s,d as o,w as c,F as l,c as a,e as n,o as r}from"./app.43fe0c63.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";var i="/blog-web/assets/20191116154748299_1662.a2a36842.png";const k={},d=a('<h1 id="\u5FAA\u73AF\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF\u8BED\u53E5" aria-hidden="true">#</a> \u5FAA\u73AF\u8BED\u53E5</h1><p>\u5FAA\u73AF\u6709\u5404\u79CD\u7C7B\u578B\uFF0C\u4F46\u662F\u5B83\u4EEC\u672C\u8D28\u4E0A\u90FD\u5B9E\u73B0\u76F8\u540C\u7684\u64CD\u4F5C\uFF1A\u91CD\u590D\u4E00\u5B9A\u6B21\u6570\u5730\u6267\u884C\u7279\u5B9A\u64CD\u4F5C\u3002</p><p>\u5FAA\u73AF\u4F53\u7684\u5355\u6B21\u6267\u884C\u53EB\u4F5C<strong>\u4E00\u6B21\u8FED\u4EE3</strong>\u3002</p><p>\u4EFB\u4F55\u5FAA\u73AF\u90FD\u5177\u6709\u4EE5\u4E0B\u4E09\u5927\u90E8\u5206\uFF1A</p><ul><li>\u4F55\u65F6\u5F00\u59CB\uFF1A\u8BBE\u7F6E\u5FAA\u73AF\u53D8\u91CF\u7684\u8D77\u59CB\u503C</li><li>\u4F55\u65F6\u505C\u6B62\uFF1A\u6D4B\u8BD5\u5FAA\u73AF\u662F\u5426\u7EE7\u7EED\u7684\u903B\u8F91\u6761\u4EF6\uFF0C\u4EFB\u4F55\u8868\u8FBE\u5F0F\u6216\u53D8\u91CF\u90FD\u53EF\u4EE5\u662F\u5FAA\u73AF\u6761\u4EF6\uFF0C\u5B83\u4EEC\u4F1A\u88AB\u9690\u5F0F\u8F6C\u6362\u4E3A\u5E03\u5C14\u503C\u3002</li><li>\u5982\u4F55\u8F6C\u5230\u4E0B\u4E00\u9879\uFF1A \u9012\u589E\u6216\u9012\u51CF\u6B65\u9AA4</li></ul><p>\u26A0\uFE0F \u5F53\u8FDB\u5165\u65E0\u9650\u5FAA\u73AF\u4E2D\u6D4F\u89C8\u5668\u6807\u7B7E\u9875\u4F1A\u5D29\u6E83\u6216\u5361\u4F4F/\u4E0D\u54CD\u5E94\uFF0C\u53EF\u4EE5\u91C7\u53D6\u4EE5\u4E0B\u65B9\u6CD5</p><ul><li>\u5BF9\u4E8E Firefox \u6D4F\u89C8\u5668\u4F1A\u5F39\u51FA\u4E00\u4E2A\u901A\u77E5\uFF0C\u63D0\u9192\u811A\u672C\u4E0D\u54CD\u5E94\uFF0C\u5E76\u7ED9\u51FA\u7EC8\u6B62\u8BE5\u811A\u672C\u7684\u9009\u9879\uFF08\u6267\u884C\u8FD9\u4E00\u9009\u9879\uFF09</li><li>\u5BF9\u4E8E Chrome \u6D4F\u89C8\u5668\uFF0C\u53EF\u5728\u4EFB\u52A1\u680F\u9F20\u6807\u53F3\u952E\u6253\u5F00 Chrome \u4EFB\u52A1\u7BA1\u7406\u5668\uFF0C\u7EC8\u6B62\u8FD0\u884C\u8BE5\u811A\u672C\u7684\u7279\u5B9A\u6807\u7B7E\u9875\u8FDB\u7A0B</li></ul><p><img src="'+i+`" alt="Chrome \u4EFB\u52A1\u7BA1\u7406\u5668"></p><h2 id="for-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#for-\u5FAA\u73AF" aria-hidden="true">#</a> for \u5FAA\u73AF</h2><p>JavaScript \u6709\u591A\u79CD for \u5FAA\u73AF\u7ED3\u6784\uFF0C\u5177\u4F53\u533A\u522B\u4E0E\u9009\u62E9\u54EA\u4E00\u79CD\u5408\u9002\u7684\u5FAA\u73AF\u7ED3\u6784\u53EF\u4EE5\u53C2\u8003\u4F18\u8FBE\u5B66\u57CE\u524D\u7AEF\u6837\u5F0F\u6307\u5357\u7684\u5FAA\u73AF\u90E8\u5206 <a href="https://udacity.github.io/frontend-nanodegree-styleguide/javascript.html#for-in-loop" target="_blank" rel="noopener noreferrer">for, for-in and forEach</a>\uFF08<a href="https://udacity.github.io/frontend-nanodegree-styleguide-zh/html/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%BA%B3%E7%B1%B3%E5%AD%A6%E4%BD%8D%E6%A0%B7%E5%BC%8F%E6%8C%87%E5%8D%97%20-%20JavaScript.html#25-for-for-in-%E5%92%8C-foreach" target="_blank" rel="noopener noreferrer">\u4E2D\u8BD1\u7248</a>\uFF09</p><h3 id="for-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#for-\u7ED3\u6784" aria-hidden="true">#</a> for \u7ED3\u6784</h3><p>for \u5FAA\u73AF\u7ED3\u6784\u662F\u6700\u5E38\u4F7F\u7528\u7684\u5FAA\u73AF\u5F62\u5F0F\uFF0C\u4E00\u822C\u77E5\u9053\u9700\u8981\u5FAA\u73AF\u7684\u6B21\u6570\uFF0C\u56E0\u6B64\u5E38\u5E38\u501F\u52A9\u300C\u8BA1\u6570\u300D\u53D8\u91CF\u63A7\u5236\u5FAA\u73AF\u6B21\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>begin<span class="token punctuation">;</span> condition<span class="token punctuation">;</span> step<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5FAA\u73AF\u4F53</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u9700\u8981\u5728\u5173\u952E\u5B57 <code>for</code> \u540E\u7684\u5C0F\u62EC\u53F7 <code>()</code> \u91CC\u660E\u786E\u5B9A\u4E49\u5FAA\u73AF\u53C2\u6570\u7684\u521D\u59CB\u5316 <code>begin</code>\u3001\u5224\u65AD\u5FAA\u73AF\u662F\u5426\u7EE7\u7EED\u8FDB\u884C\u7684\u6761\u4EF6 <code>condition</code> \u548C\u5FAA\u73AF\u7684\u300C\u6B65\u957F\u300D<code>step</code>\u3002</p><p>\u{1F4A1} for \u5FAA\u73AF\u7684\u4EFB\u4F55\u8BED\u53E5\u6BB5\u90FD\u53EF\u4EE5\u88AB\u7701\u7565\uFF0C\u53EA\u8981\u5728\u53E6\u5916\u7684\u5730\u65B9\u8FDB\u884C\u5408\u9002\u7684\u5B9A\u4E49\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7701\u7565 begin \u8BED\u53E5\u6BB5</span>
<span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u5DF2\u7ECF\u5728\u5FAA\u73AF\u7ED3\u6784\u5916\u90E8\u58F0\u660E\u4E86 i \u5E76\u5BF9\u5B83\u8FDB\u884C\u4E86\u8D4B\u503C</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// \u4E0D\u518D\u9700\u8981 begin \u8BED\u53E5\u6BB5</span>
  <span class="token function">alert</span><span class="token punctuation">(</span> i <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 0, 1, 2</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7701\u7565 step \u8BED\u53E5\u6BB5</span>
<span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u5728\u5FAA\u73AF\u4F53\u5185\u8BBE\u7F6E step \u81EA\u589E\u8BA1\u6570\u53D8\u91CF</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u65E0\u9650\u5FAA\u73AF</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u65E0\u9650\u5FAA\u73AF</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><table><thead><tr><th style="text-align:center;">\u8BED\u53E5\u6BB5</th><th style="text-align:center;">\u4F5C\u7528</th></tr></thead><tbody><tr><td style="text-align:center;"><code>begin</code></td><td style="text-align:center;">\u8FDB\u5165\u5FAA\u73AF\u65F6\u6267\u884C\u4E00\u6B21</td></tr><tr><td style="text-align:center;"><code>condition</code></td><td style="text-align:center;">\u5728\u6BCF\u6B21\u5FAA\u73AF\u8FED\u4EE3\u4E4B\u524D\u68C0\u67E5\uFF0C\u5982\u679C\u4E3A <code>false</code> \u505C\u6B62\u5FAA\u73AF</td></tr><tr><td style="text-align:center;"><code>body</code>\uFF08\u5FAA\u73AF\u4F53\uFF09</td><td style="text-align:center;">\u6761\u4EF6\u4E3A\u771F\u65F6\uFF0C\u91CD\u590D\u8FD0\u884C</td></tr><tr><td style="text-align:center;"><code>step</code></td><td style="text-align:center;">\u5728\u6BCF\u6B21\u5FAA\u73AF\u4F53\u8FED\u4EE3\u540E\u6267\u884C</td></tr></tbody></table><p>\u26A0\uFE0F for \u7ED3\u6784\u4E2D\u7684\u4E24\u4E2A <code>;</code> \u5FC5\u987B\u5B58\u5728\uFF0C\u5426\u5219\u4F1A\u51FA\u73B0\u8BED\u6CD5\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8F93\u51FA\u4E86 0-5 \u7684\u6BCF\u4E2A\u503C</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Printing out i = &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u{1F3A6} <a href="https://www.jianguoyun.com/p/DdrSCXYQjNDGBxiT--AD" target="_blank" rel="noopener noreferrer">\u5206\u6B65\u8BB2\u89E3 For \u5FAA\u73AF</a></p><p>\u5F80\u8FD4\u91CD\u590D\u7684\u8FED\u4EE3\u6D41\u7A0B\uFF1A</p><ul><li>\u9996\u5148\u5728\u5F00\u59CB\u5FAA\u73AF\u65F6\u5148\u901A\u8FC7 <code>start</code> \u521D\u59CB\u5316\uFF08\u7136\u540E\u6267\u884C\u9996\u6B21 <code>stop</code> \u6761\u4EF6\u5224\u65AD\uFF0C\u6EE1\u8DB3\u540E\u5373\u8FDB\u5165\u5FAA\u73AF\u4E3B\u4F53\uFF09</li><li>\u6BCF\u6B21\u68C0\u67E5 <code>condition</code> \u540E\u7ED3\u679C\u4E3A <code>true</code> \u624D\u6267\u884C <code>body</code> \u548C <code>step</code></li><li>\u6267\u884C\u5B8C\u4E00\u6B21\u8FED\u4EE3\u540E\uFF0C\u5148\u6267\u884C <code>step</code> \u5BF9\u53D8\u91CF\u8FDB\u884C\u66F4\u65B0\uFF0C\u518D\u8FDB\u884C <code>stop</code> \u6761\u4EF6\u5224\u65AD</li></ul><p>\u{1F4A1} \u5FAA\u73AF\u53EF\u4EE5\u901A\u8FC7\u5D4C\u5957\u6784\u6210\u66F4\u590D\u6742\u7684\u7ED3\u6784</p><p>\u26A0\uFE0F \u5728\u5FAA\u73AF\u7ED3\u6784\u4E2D\uFF0C\u300C\u8BA1\u6570\u300D\u53D8\u91CF\u662F\u5728\u5FAA\u73AF\u4E2D\u58F0\u660E\u7684\uFF0C\u79F0\u4E3A <strong>\u300C\u5185\u8054\u300D\u53D8\u91CF\u58F0\u660E</strong>\uFF0C\u56E0\u6B64\u53EA\u80FD\u5728\u5FAA\u73AF\u4E2D\u53EF\u89C1\uFF0C\u8FD9\u79CD\u53D8\u91CF\u5E94\u8BE5<strong>\u4F7F\u7528\u5173\u952E\u5B57 <code>let</code> \u58F0\u660E</strong>\u3002</p><h3 id="for-in-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#for-in-\u7ED3\u6784" aria-hidden="true">#</a> for-in \u7ED3\u6784</h3><p>\u4F7F\u7528 for-in \u7ED3\u6784\u53EF\u4EE5\u65B9\u4FBF\u904D\u5386\u5BF9\u8C61\u5C5E\u6027\u4E2D\u7684\u6BCF\u4E2A<strong>\u952E</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    code_block
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u{1F4A1} \u8FED\u4EE3\u53D8\u91CF <code>key</code> \u83B7\u53D6\u7684\u662F <code>object</code> \u5BF9\u8C61\u7684<strong>\u952E</strong>\uFF08\u800C\u975E\u5143\u7D20\u672C\u4F53\u6216\u5C5E\u6027\u503C <code>value</code>\uFF09\uFF0C\u5982\u9700\u8981\u83B7\u53D6\u5BF9\u8C61\u7684\u5143\u7D20\uFF0C\u53EF\u5229\u7528\u70B9\u8BB0\u6CD5 <code>object.key</code> \u6216\u62EC\u53F7\u8BB0\u6CD5 <code>object[key]</code> \u8FDB\u884C\u8BBF\u95EE</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F9D\u6B21\u8F93\u51FA\u5BF9\u8C61\u6240\u6709\u7684\u5143\u7D20</span>
myObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;country1&#39;</span><span class="token operator">:</span><span class="token string">&#39;Germany&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;country2&#39;</span><span class="token operator">:</span><span class="token string">&#39;Argentina&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> myObj<span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">// \u6240\u6709\u7684 for \u7ED3\u6784\u4F53\u90FD\u5141\u8BB8\u6211\u4EEC\u5728\u5FAA\u73AF\u4E2D\u5B9A\u4E49\u53D8\u91CF\uFF0C\u50CF\u8FD9\u91CC\u7684 let key</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u{1F4A1} \u5FAA\u73AF\u904D\u5386\u987A\u5E8F\u6309\u7167\u5C5E\u6027\u521B\u5EFA\u7684\u987A\u5E8F\uFF0C\u4F46\u5B58\u5728 <strong>\u6574\u6570\u5C5E\u6027</strong> \u5219\u4F1A\u88AB\u8FDB\u884C\u6392\u5E8F\uFF08\u6574\u6570\u5C5E\u6027\u662F\u6307\u4E00\u4E2A\u53EF\u4EE5\u5728\u4E0D\u4F5C\u4EFB\u4F55\u66F4\u6539\u7684\u60C5\u51B5\u4E0B\u8F6C\u6362\u4E3A\u6574\u6570\u7684\u5B57\u7B26\u4E32\uFF0C\u4EE5\u8FD9\u4E2A\u5B57\u7B26\u4E32\u4F5C\u4E3A\u5C5E\u6027\u540D\uFF0C\u5982 <code>&quot;49&quot;</code> \u5B57\u7B26\u4E32\u4F5C\u4E3A\u5C5E\u6027\u540D\u7684\u5C5E\u6027\u5C31\u662F\u6574\u6570\u5C5E\u6027\uFF0C\u800C <code>&quot;+49&quot;</code> \u5B57\u7B26\u4E32\u4F5C\u4E3A\u5C5E\u6027\u540D\u7684\u5C5E\u6027\u5C31\u4E0D\u662F\u6574\u4F53\u5C5E\u6027\uFF09</p><p>\u26A0\uFE0F \u56E0\u4E3A for-in \u7ED3\u6784\u5FAA\u73AF\u904D\u5386\u8BBF\u95EE\u6240\u6709\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\uFF0C\u8FD9\u610F\u5473\u7740\u5982\u679C\u5411\u5BF9\u8C61/\u6570\u7EC4\u7684<a href="http://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-a-bad-idea" target="_blank" rel="noopener noreferrer">\u539F\u578B\u4E2D\u6DFB\u52A0\u4EFB\u4F55\u5176\u4ED6\u5C5E\u6027\uFF0C\u8FD9\u4E9B\u5C5E\u6027\u4E5F\u4F1A\u51FA\u73B0\u5728\u5FAA\u73AF\u4E2D</a>\u3002\u7531\u4E8E for-in \u7ED3\u6784\u5BF9\u4E8E\u6570\u7EC4\u548C\u5BF9\u8C61\u5B58\u5728\u4E0D\u4E00\u81F4\u7684\u884C\u4E3A\uFF0C \u56E0\u6B64 <strong><a href="https://websanova.com/blog/javascript/why-javascript-for-in-loops-are-bad" target="_blank" rel="noopener noreferrer">\u4E0D\u5EFA\u8BAE\u4F7F\u7528 for-in \u7ED3\u6784\u904D\u5386\u6570\u7EC4</a></strong>\uFF0C\u5E94\u4F7F\u7528\u6807\u51C6 <code>for</code> \u5FAA\u73AF\u6216\u6570\u7EC4\u7279\u6709\u7684<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="noopener noreferrer">\u65B9\u6CD5 <code>forEach()</code></a> \u904D\u5386\u5176\u5143\u7D20\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">decimalfy</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> index <span class="token keyword">in</span> digits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>digits<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8F93\u51FA\u7ED3\u679C\u9664\u4E86\u6570\u7EC4\u5143\u7D20\uFF0C\u8FD8\u4F1A\u8F93\u51FA\u6570\u7EC4\u539F\u578B\u4E2D\u6DFB\u52A0\u7684\u65B9\u6CD5\uFF08\u5177\u4F53\u4EE3\u7801\uFF09</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u26A0\uFE0F \u6570\u7EC4\u65B9\u6CD5 <code>forEach()</code> \u5728\u5FAA\u73AF\u4E2D\u4E5F\u65E0\u6CD5\u505C\u6B62\u6216\u9000\u51FA\uFF08\u5982\u679C\u5E0C\u671B\u5728\u5FAA\u73AF\u4E2D\u4F7F\u7528 <code>break</code> \u8BED\u53E5\u505C\u6B62\u6216\u9000\u51FA\u5FAA\u73AF\uFF0C\u5219\u9700\u8981\u4F7F\u7528\u57FA\u672C\u7684 for \u5FAA\u73AF\u7ED3\u6784\uFF09</p><p>\u26A0\uFE0F \u4F7F\u7528 for-in \u5FAA\u73AF\u5BF9\u8C61\u65F6\uFF0C\u4F1A\u5FFD\u7565\u4F7F\u7528 <code>Symbol(...)</code> \u4F5C\u4E3A\u952E\u7684\u5C5E\u6027</p><h3 id="for-of-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#for-of-\u5FAA\u73AF" aria-hidden="true">#</a> for-of \u5FAA\u73AF</h3><p>for-of \u5FAA\u73AF\u65B9\u6CD5\u662F\u540E\u6765\u65B0\u589E\u7684 JavaScript \u5FAA\u73AF\u7ED3\u6784\uFF0C\u7ED3\u5408\u4E86 for \u5FAA\u73AF\u548C for-in \u5FAA\u73AF\u7ED3\u6784\u7684\u4F18\u52BF\uFF0C<strong>\u5FFD\u7565\u7D22\u5F15\u53EF\u76F4\u63A5\u83B7\u53D6\u5143\u7D20</strong>\u3002\u53EF\u4EE5\u5FAA\u73AF\u4EFB\u4F55\u53EF\u8FED\u4EE3\uFF08\u5373\u9075\u5B88<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols" target="_blank" rel="noopener noreferrer">\u53EF\u8FED\u4EE3\u534F\u8BAE</a>\uFF09\u7C7B\u578B\u7684\u6570\u636E\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u53EF\u8FED\u4EE3\u7684\u6570\u636E\u7C7B\u578B\uFF08\u26A0\uFE0F \u4E0D\u5305\u542B <code>Object</code> \u6570\u636E\u7C7B\u578B\uFF0C\u5373 <code>{}</code>\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5BF9\u8C61\u4E0D\u53EF\u8FED\u4EE3\uFF09\uFF1A</p><ul><li><code>String</code></li><li><code>Array</code></li><li><code>Map</code></li><li><code>Set</code> \u96C6\u5408\u662F ES6 \u4E2D\u7684\u5168\u65B0\u5185\u7F6E\u5BF9\u8C61</li></ul><p>\u{1F4A1} \u4E0E for-in \u7ED3\u6784\u76F8\u6BD4\uFF0Cfor-of \u5FAA\u73AF\u7ED3\u6784\u7684\u4E00\u4E2A\u4F18\u70B9\u662F\u4E0D\u7528\u62C5\u5FC3\u5F53\u5411\u5BF9\u8C61\u4E2D\u6DFB\u52A0\u65B0\u7684\u539F\u578B\u65F6\u9020\u6210\u7684\u95EE\u9898\uFF0C\u56E0\u4E3A\u5B83\u53EA\u5FAA\u73AF\u8BBF\u95EE\u5BF9\u8C61\u4E2D\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// for...of \u5FAA\u73AF\u7684\u7F16\u5199\u65B9\u5F0F\u548C for...in \u5FAA\u73AF\u7684\u7C7B\u4F3C\uFF0C\u8FED\u4EE3\u53C2\u6570\u662F\u6307\u5143\u7D20\u672C\u8EAB\uFF0C\u800C\u4E0D\u662F\u7D22\u5F15</span>
<span class="token comment">// \u8F93\u51FA\u5076\u6570</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> digit <span class="token keyword">of</span> digits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>digit <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>digit<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u{1F4A1} \u5728\u5FAA\u73AF\u7ED3\u6784\u4E2D\u53D8\u91CF\u4E00\u822C\u7684\u547D\u540D\u7EA6\u5B9A\uFF0C\u4F7F\u7528\u590D\u6570\u5BF9\u8C61\u540D\u79F0\u6765\u8868\u793A\u591A\u4E2A\u503C\u7684\u96C6\u5408\uFF0C\u800C\u8FED\u4EE3\u53C2\u6570\u4F7F\u7528\u5355\u6570\u6765\u8868\u793A\u96C6\u5408\u4E2D\u7684\u5355\u4E2A\u503C\u3002</p><h3 id="foreach-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#foreach-\u65B9\u6CD5" aria-hidden="true">#</a> forEach() \u65B9\u6CD5</h3><p><code>forEach()</code> \u662F\u6570\u7EC4\u7684\u5185\u7F6E\u65B9\u6CD5\uFF0C\u53EA\u80FD\u7528\u4E8E\u904D\u5386\u6570\u7EC4\u6BCF\u4E00\u4E2A\u5143\u7D20\uFF0C\u4E00\u822C\u63A5\u53D7\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u5BF9\u6BCF\u4E2A\u5143\u7D20\u6267\u884C\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\u7684\u5904\u7406\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>mySimpleArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;etc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5728\u63A7\u5236\u53F0\u4F9D\u6B21\u8F93\u51FA\u6570\u7EC4\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20</span>
mySimpleArray<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="while-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#while-\u5FAA\u73AF" aria-hidden="true">#</a> while \u5FAA\u73AF</h2><p>\u5F53\u4E8B\u5148\u672A\u77E5\u5FAA\u73AF\u6B21\u6570\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 while \u5FAA\u73AF\u3002\u4E00\u822C\u5224\u65AD\u6761\u4EF6\u4F7F\u7528\u7684\u662F\u5916\u90E8\u53D8\u91CF\uFF08\u5728\u5FAA\u73AF\u4F53\u5916\u90E8\u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u5E76\u5DF2\u8FDB\u884C\u521D\u59CB\u5316\uFF09\u3002</p><h3 id="while-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#while-\u7ED3\u6784" aria-hidden="true">#</a> while \u7ED3\u6784</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5FAA\u73AF\u4F53</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5FAA\u73AF\u662F\u5426\u7EE7\u7EED\u8FDB\u884C\u7684 <code>condition</code> \u5224\u65AD\u6761\u4EF6\u5728 <code>while</code> \u5173\u952E\u5B57\u540E\u7684\u5C0F\u62EC\u53F7 <code>()</code>\u5185\uFF0C\u5F53\u6761\u4EF6\u4E3A <code>true</code> \u65F6\u6267\u884C\u5FAA\u73AF\u4F53\uFF0C\u4E14\u5728\u5FAA\u73AF\u4F53\u5185\u5BF9\u53D8\u91CF\u8FDB\u884C\u4FEE\u6539\uFF08\u9012\u589E\u6216\u9012\u51CF\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// \u521D\u59CB\u5316\u5FAA\u73AF\u53D8\u91CF</span>

<span class="token comment">// \u5728\u63A7\u5236\u53F0\u6253\u5370\u6570\u5B57 0-9</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// \u7EE7\u7EED\u6267\u884C\u5FAA\u73AF\u4F53\u7684\u5224\u65AD\u6761\u4EF6</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
  start <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token comment">// \u9012\u589E\u53D8\u91CF</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u{1F4A1} \u5982\u679C\u5FAA\u73AF\u4F53\u53EA\u6709\u4E00\u6761\u8BED\u53E5\uFF0C\u5219\u53EF\u4EE5\u7701\u7565\u5927\u62EC\u53F7 <code>{}</code></p><h3 id="do-while-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#do-while-\u7ED3\u6784" aria-hidden="true">#</a> do-while \u7ED3\u6784</h3><p>\u4F7F\u7528 do-while \u7ED3\u6784\u53EF\u4EE5\u5C06\u6761\u4EF6\u68C0\u67E5\u79FB\u81F3\u5FAA\u73AF\u4F53\u4E0B\u9762\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u5F00\u59CB\u65F6<strong>\u9996\u5148\u6267\u884C\u5FAA\u73AF\u4F53</strong>\uFF0C\u7136\u540E\u68C0\u67E5\u6761\u4EF6\uFF0C\u5F53\u6761\u4EF6\u4E3A\u771F\u65F6\uFF0C\u91CD\u590D\u6267\u884C\u5FAA\u73AF\u4F53\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">do</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FAA\u73AF\u4F53</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u{1F4A1} \u8FD9\u79CD\u5F62\u5F0F\u7684\u8BED\u6CD5\u5F88\u5C11\u4F7F\u7528\uFF0C\u9664\u975E\u4F60\u5E0C\u671B\u4E0D\u7BA1\u6761\u4EF6\u662F\u5426\u4E3A\u771F\uFF0C<strong>\u5FAA\u73AF\u4F53 \u81F3\u5C11\u6267\u884C\u4E00\u6B21</strong>\u3002</p><h2 id="\u8DF3\u51FA\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u8DF3\u51FA\u5FAA\u73AF" aria-hidden="true">#</a> \u8DF3\u51FA\u5FAA\u73AF</h2><p>\u4F7F\u7528 break \u6307\u4EE4\u3001continue \u6307\u4EE4\u3001break/continue \u6807\u7B7E\u8DF3\u51FA\u5FAA\u73AF\u3002</p><h3 id="break-\u6307\u4EE4" tabindex="-1"><a class="header-anchor" href="#break-\u6307\u4EE4" aria-hidden="true">#</a> break \u6307\u4EE4</h3>`,58),b=n("\u901A\u5E38\u6761\u4EF6\u4E3A\u5047\u65F6\u5FAA\u73AF\u4F1A\u7EC8\u6B62\uFF0C\u4F46\u53EF\u4EE5\u4F7F\u7528 "),m=s("code",null,"break",-1),g=n(" \u6307\u4EE4"),h=n("\u5F3A\u5236\u9000\u51FA\u5F53\u524D\u5FAA\u73AF\u4F53\u3002"),f=a(`<p>\u{1F4A1} \u65E0\u9650\u5FAA\u73AF\u548C <code>break</code> \u7EC4\u5408\uFF0C\u975E\u5E38\u9002\u7528\u4E8E\u4E0D\u5FC5\u5728\u5FAA\u73AF\u5F00\u59CB/\u7ED3\u675F\u65F6\u68C0\u67E5\u6761\u4EF6\uFF0C\u4F46\u9700\u8981\u5728\u4E2D\u95F4\u751A\u81F3\u662F\u4E3B\u4F53\u7684\u591A\u4E2A\u4F4D\u7F6E\u8FDB\u884C\u6761\u4EF6\u68C0\u67E5\u7684\u60C5\u51B5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u63A5\u53D7\u7528\u6237\u8F93\u5165\u4E00\u7CFB\u5217\u6570\u5B57\uFF0C\u5728\u8F93\u5165\u7684\u5185\u5BB9\u4E0D\u662F\u6570\u5B57\uFF08\u6216\u53D6\u6D88\u8F93\u5165\uFF09\u65F6\u7EC8\u6B62\u5FAA\u73AF</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token operator">+</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;Enter a number&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>   <span class="token comment">// \u8DF3\u51FA\u5FAA\u73AF</span>
  <span class="token punctuation">}</span>
  sum <span class="token operator">+=</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">alert</span><span class="token punctuation">(</span> <span class="token string">&#39;Sum: &#39;</span> <span class="token operator">+</span> sum <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u8F93\u51FA\u6240\u6709\u952E\u5165\u6570\u5B57\u4E4B\u548C</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u26A0\uFE0F <code>break</code> \u6307\u4EE4\u53EA\u80FD\u8DF3\u51FA\u4E00\u5C42\u5FAA\u73AF</p><h3 id="continue-\u6307\u4EE4" tabindex="-1"><a class="header-anchor" href="#continue-\u6307\u4EE4" aria-hidden="true">#</a> continue \u6307\u4EE4</h3><p><code>continue</code> \u6307\u4EE4\u662F <code>break</code> \u7684\u300C\u8F7B\u91CF\u7248\u300D\uFF0C\u5B83\u4E0D\u4F1A\u505C\u6389\u6574\u4E2A\u5FAA\u73AF\u800C\u662F<strong>\u505C\u6B62\u5F53\u524D\u8FD9\u4E00\u6B21\u8FED\u4EE3</strong>\uFF0C\u5E76\u5F3A\u5236\u542F\u52A8\u65B0\u4E00\u8F6E\u5FAA\u73AF\uFF08\u5982\u679C\u6761\u4EF6\u5141\u8BB8\u7684\u8BDD\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F9D\u6B21\u5728\u5F39\u51FA\u7684\u6A21\u6001\u7A97\u53E3\u5C55\u793A\u5947\u6570 1~9</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">//\u5982\u679C\u4E3A\u771F\uFF0C\u8DF3\u8FC7\u5FAA\u73AF\u4F53\u7684\u5269\u4F59\u90E8\u5206\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>

  <span class="token function">alert</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 3, 5, 7, 9</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u26A0\uFE0F \u7981\u6B62 <code>break</code> \u6216 <code>continue</code> \u5728\u4E09\u5143\u8FD0\u7B97\u7B26 <code>?</code> \u7684\u53F3\u8FB9\u3002\u56E0\u4E3A\u4F1A\u9020\u6210\u4EE3\u7801\u505C\u6B62\u8FD0\u884C\uFF0C\u5E76\u663E\u793A\u6709\u8BED\u6CD5\u9519\u8BEF\u3002</p><h2 id="break-continue-\u6807\u7B7E" tabindex="-1"><a class="header-anchor" href="#break-continue-\u6807\u7B7E" aria-hidden="true">#</a> break/continue \u6807\u7B7E</h2><p><code>break</code> \u4E0E <code>continue</code> \u90FD\u53EA\u80FD\u9488\u5BF9\u6240\u5728\u7684\u4E00\u5C42\u5FAA\u73AF\uFF0C\u5BF9\u4E8E\u5D4C\u5957\u5FAA\u73AF\u9700\u8981\u4E00\u6B65\u8DF3\u51FA\uFF0C\u53EF\u4EE5\u7ED3\u5408 <code>label</code> \u6807\u7B7E\u4F7F\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>labelName<span class="token operator">:</span> <span class="token keyword">for</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> condition<span class="token punctuation">,</span> step<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FAA\u73AF\u4F53</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token keyword">break</span> labelName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6807\u7B7E\u662F\u5728<strong>\u5FAA\u73AF\u4E4B\u524D</strong>\u5E26\u6709\u5192\u53F7 <code>:</code> \u7684\u6807\u8BC6\u7B26\uFF0C\u4F7F\u7528 <code>break labelName</code> \u8DF3\u51FA\u6807\u7B7E\u540E\u7684\u5FAA\u73AF\uFF0C\u4EE3\u7801\u5728\u6807\u8BC6\u7684\u5FAA\u73AF\u4E4B\u540E\u7EE7\u7EED\u8FD0\u884C\u3002</p><p><code>continue labelName</code> \u4E5F\u662F\u76F8\u4F3C\u7684\u7528\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>outer<span class="token operator">:</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> input <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Value at coords (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>j<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u662F\u7A7A\u5B57\u7B26\u4E32\u6216\u88AB\u53D6\u6D88\uFF0C\u5219\u4E2D\u65AD\u5E76\u8DF3\u51FA\u8FD9\u4E24\u4E2A\u5FAA\u73AF\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>input<span class="token punctuation">)</span> <span class="token keyword">break</span> outer<span class="token punctuation">;</span> <span class="token comment">// (*)</span>
    <span class="token comment">// \u7528\u5F97\u5230\u7684\u503C\u505A\u4E9B\u4E8B\u2026\u2026</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Done!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5F53\u89E6\u53D1 <code>break outer</code> \u65F6\uFF0C\u7A0B\u5E8F\u4F1A\u5411\u4E0A\u5BFB\u627E\u540D\u4E3A <code>outer</code> \u7684\u6807\u7B7E\u5E76\u5176\u540E\u6307\u4EE3\u7684\u6240\u6709\u5FAA\u73AF\uFF0C\u63A7\u5236\u6743\u76F4\u63A5\u4ECE <code>(*)</code> \u8F6C\u81F3 <code>alert(&#39;Done!&#39;)</code></p><p>\u26A0\uFE0F \u6807\u7B7E\u5E76\u4E0D\u5141\u8BB8\u300C\u8DF3\u5230\u300D\u6240\u6709\u4F4D\u7F6E\uFF0C\u53EA\u6709\u5728\u5FAA\u73AF\u5185\u90E8\u624D\u80FD\u8C03\u7528 <code>break</code> \u6216 <code>continue</code>\uFF0C\u5E76\u4E14\u6807\u7B7E\u5FC5\u987B\u4F4D\u4E8E<strong>\u6307\u4EE4\u4E0A\u65B9</strong>\u7684\u67D0\u4E2A\u4F4D\u7F6E\u3002</p>`,15);function v(y,w){const p=e("RouterLink");return r(),t(l,null,[d,s("p",null,[b,o(p,{to:"/frontend/JavaScript/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E4%B8%AD%E6%96%AD%E8%AF%AD%E5%8F%A5.html"},{default:c(()=>[m,g]),_:1}),h]),f],64)}var _=u(k,[["render",v]]);export{_ as default};
