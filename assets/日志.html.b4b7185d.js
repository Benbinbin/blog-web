import{c as n}from"./app.43fe0c63.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u65E5\u5FD7" tabindex="-1"><a class="header-anchor" href="#\u65E5\u5FD7" aria-hidden="true">#</a> \u65E5\u5FD7</h1><p>\u7CFB\u7EDF\u65E5\u5FD7\u8BB0\u5F55\u4E86\u7F51\u7AD9\u7684\u4F7F\u7528\u60C5\u51B5\uFF0C\u6839\u636E\u529F\u80FD\u53EF\u4EE5\u5206\u4E3A\u591A\u79CD\u5E38\u89C1\u7684\u65E5\u5FD7\uFF1A</p><ul><li>\u8BBF\u95EE\u65E5\u5FD7 access log\uFF08server \u7AEF\u6700\u91CD\u8981\u7684\u65E5\u5FD7\uFF09\uFF0C\u8BB0\u5F55\u6BCF\u6B21\u8BF7\u6C42\u7684\u60C5\u51B5</li><li>\u81EA\u5B9A\u4E49\u65E5\u5FD7\uFF0C\u5305\u62EC\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u3001\u9519\u8BEF\u8BB0\u5F55\u7B49</li></ul><p>\u65E5\u5FD7\u8BB0\u5F55\u4EE5\u6587\u6863\u5F62\u5F0F\u5B58\u50A8\u5728\u786C\u76D8\u4E2D\uFF08\u800C\u4E0D\u5B58\u50A8\u518D Redis\uFF0C\u7531\u4E8E\u65E5\u5FD7\u901A\u5E38\u5F88\u5927\uFF1B\u4E00\u822C\u4E0D\u5B58\u50A8\u5728 MySQL\uFF0C\u7531\u4E8E\u65E5\u5FD7\u6570\u636E\u7ED3\u6784\u6BD4\u8F83\u7B80\u5355\uFF0C\u4E0D\u9700\u8981 MySQL \u8FDB\u884C\u4F18\u5316\u5B58\u50A8\uFF09\uFF0C\u9700\u8981\u8FDB\u884C\u65E5\u5FD7\u6587\u4EF6\u62C6\u5206\u65B9\u4FBF\u5B58\u50A8\u7BA1\u7406\uFF0C\u65E5\u5FD7\u4E3B\u8981\u7528\u4E8E\u540E\u7EED\u7684\u5185\u5BB9\u5206\u6790\u3002\u56E0\u6B64\u65E5\u5FD7\u8BB0\u5F55\u9700\u8981\u4F7F\u7528 Node.js \u8FDB\u884C\u6587\u4EF6\u64CD\u4F5C\uFF0C\u4E00\u822C\u901A\u8FC7 nodejs stream \u65B9\u5F0F\u63D0\u9AD8\u6027\u80FD\u3002</p><h2 id="\u6587\u4EF6\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u64CD\u4F5C" aria-hidden="true">#</a> \u6587\u4EF6\u64CD\u4F5C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F7F\u7528\u6A21\u5757 path \u62FC\u63A5\u6587\u4EF6\u8DEF\u5F84\uFF0C\u4EE5\u9002\u914D\u4E0D\u540C\u7684\u7CFB\u7EDF\u73AF\u5883\u4E0B\u8DEF\u5F84\u8868\u793A\u65B9\u5F0F\u4E0D\u540C</span>
<span class="token comment">// __dirname \u662F nodejs \u5168\u5C40\u53D8\u91CF\uFF0C\u8868\u793A\u5F53\u524D\u6587\u6863\u6240\u5728\u76EE\u5F55</span>
<span class="token comment">// \u4EE5\u4E0B\u62FC\u63A5\u5F97\u5230\u6587\u4EF6 data.txt \u76F8\u5BF9\u4E8E\u5F53\u524D\u6587\u6863\u7684\u8DEF\u5F84</span>
<span class="token keyword">const</span> fileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BFB\u53D6\u6587\u4EF6\u5185\u5BB9\uFF0C\u5F02\u6B65\u64CD\u4F5C</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// data \u662F\u4E8C\u8FDB\u5236\u7C7B\u578B\uFF0C\u9700\u8981\u4F7F\u7528\u65B9\u6CD5 .toString() \u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5199\u5165\u6587\u4EF6</span>
<span class="token comment">// \u5199\u5165\u5185\u5BB9</span>
<span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token string">&#39;\u8FD9\u662F\u65B0\u5199\u5165\u7684\u5185\u5BB9\\n&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u914D\u7F6E\u5199\u5165\u65B9\u5F0F</span>
<span class="token keyword">const</span> opt <span class="token operator">=</span> <span class="token punctuation">{</span>
  flag<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span>   <span class="token comment">// \u8FFD\u52A0\u5199\u5165\uFF0C\u5982\u679C\u662F\u8986\u76D6\u5199\u5165\u5C31\u8BBE\u7F6E\u4E3A &#39;w&#39;</span>
<span class="token punctuation">}</span>
fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> content<span class="token punctuation">,</span> opt<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5224\u65AD\u6587\u4EF6\u662F\u5426\u5B58\u5728</span>
fs<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">exist</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>exist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>\u{1F4A1} \u65B9\u6CD5 <code>fs.exists()</code> \u5DF2\u8FC7\u65F6\uFF0C\u63A8\u8350\u4F7F\u7528<a href="https://nodejs.org/api/fs.html#fs_fs_stat_path_options_callback" target="_blank" rel="noopener noreferrer">\u65B9\u6CD5 <code>fs.stat(path[, options], callback)</code></a> \u67E5\u770B\u6587\u6863/\u76EE\u5F55\u72B6\u6001\uFF0C\u6216<a href="https://nodejs.org/api/fs.html#fs_fs_access_path_mode_callback" target="_blank" rel="noopener noreferrer">\u65B9\u6CD5 <code>fs.access(path[, mode], callback)</code></a> \u67E5\u770B\u6587\u6863\u53EF\u8BBF\u95EE\u7684\u60C5\u51B5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5982\u679C\u540E\u7EED\u4E0D\u9700\u8981\u5BF9\u6587\u6863\u8FDB\u884C\u64CD\u4F5C\uFF0C\u63A8\u8350\u4F7F\u7528\u65B9\u6CD5 access</span>
<span class="token comment">// Check if the file exists in the current directory.</span>
fs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">F_OK</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err <span class="token operator">?</span> <span class="token string">&#39;does not exist&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;exists&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="stream" tabindex="-1"><a class="header-anchor" href="#stream" aria-hidden="true">#</a> Stream</h2><p>\u5982\u679C\u4F7F\u7528\u6A21\u5757 <code>fs</code> \u7684\u65B9\u6CD5 <code>readFile</code> \u6216 <code>writeFile</code> \u5206\u522B\u8BFB\u53D6\u6216\u5199\u5165\u6587\u4EF6\uFF0C\u6BCF\u6B21\u8BFB\u53D6\u6216\u5199\u5165\u5185\u5BB9\u90FD\u8981\u91CD\u65B0\u6253\u5F00\u6587\u6863\uFF0C\u5982\u679C\u9891\u7E41\u8BFB\u53D6\u6216\u5199\u5165\u5185\u5BB9\u65F6\u4F1A\u5341\u5206\u6D88\u8017\u6027\u80FD\u3002</p><p>IO \u64CD\u4F5C\uFF08\u5305\u62EC\u300C\u7F51\u7EDCIO\u300D\u548C\u300C\u6587\u4EF6IO\u300D\uFF09\u9650\u5236\u6027\u80FD\uFF0C\u56E0\u6B64\u5E94\u8BE5\u91C7\u7528<strong>\u6D41</strong>\u65B9\u5F0F\u6765\u6267\u884C\u8BFB\u53D6\u548C\u5199\u5165\u6587\u6863\u64CD\u4F5C\uFF0C<strong>\u6BCF\u4E00\u4E2A\u6D41\u7684\u6E90 stream \u901A\u8FC7\u7BA1\u9053 pipe \u8FDE\u63A5\u8D77\u6765</strong>\uFF0C\u6570\u636E\u5C31\u53EF\u4EE5\u4ECE\u4E00\u4E2A\u6E90\u4F20\u9012\u5230\u53E6\u4E00\u4E2A\u6E90\u3002</p><p>Node.js \u6A21\u5757 <code>http</code> \u7684\u8BF7\u6C42 <code>req</code> \u548C\u54CD\u5E94 <code>res</code> \u90FD\u53EF\u4EE5\u9075\u5FAA\u6C34\u6D41\u7BA1\u9053\u6A21\u578B\uFF0C<strong>\u901A\u8FC7 <code>pipe</code> \u8FDE\u63A5\u6765\u5B9E\u73B0 stream \u65B9\u5F0F\u4F20\u8F93\u6570\u636E</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> method <span class="token operator">=</span> req<span class="token punctuation">.</span>method<span class="token punctuation">;</span>
    <span class="token comment">// \u8BF7\u6C42\u6587\u4EF6\uFF0C\u4EE5 stream \u65B9\u5F0F\u8FD4\u56DE\u54CD\u5E94</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">===</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> fileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.text&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> stream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u5C06 res \u4F5C\u4E3A stream \u7684 dest</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u901A\u8FC7 stream \u65B9\u5F0F\uFF0C\u4EE5 pipe\u300C\u4E32\u63A5\u300D\u8BF7\u6C42\u548C\u54CD\u5E94\uFF0C\u5B9E\u73B0\u5C06 POST \u8BF7\u6C42\u76F4\u63A5\u4F5C\u4E3A\u54CD\u5E94\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        req<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4F7F\u7528 stream \u65B9\u5F0F\u64CD\u4F5C\u6587\u6863</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u62F7\u8D1D\u6587\u4EF6</span>
<span class="token comment">// \u4E24\u4E2A\u6587\u4EF6\u7684\u8DEF\u5F84</span>
<span class="token keyword">const</span> fileName1 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fileName2 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resovle</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;bak.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BFB\u53D6\u548C\u5199\u5165\u6587\u4EF6\u7684 stream \u5BF9\u8C61</span>
<span class="token keyword">const</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>fileName1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>fileName2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u901A\u8FC7 pipe \u8FDE\u63A5\u4E24\u4E2A stream \u5BF9\u8C61\uFF0C\u6267\u884C\u62F7\u8D1D</span>
readStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u76D1\u542C data \u4E8B\u4EF6\uFF0C\u5F53\u901A\u8FC7 pipe \u63A5\u6536\u5230\u6570\u636E\u6D41\u5C31\u4F1A\u89E6\u53D1</span>
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// data \u662F\u4E8C\u8FDB\u5236\u7C7B\u578B\uFF0C\u9700\u8981\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u518D\u6253\u5370\u51FA\u6BCF\u6B21\u63A5\u6536\u7684\u6570\u636E\u6D41\u5185\u5BB9</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u76D1\u542C end \u4E8B\u4EF6\uFF0C\u5F53\u6570\u636E\u4F20\u8F93\u5B8C\u6210\u65F6\u89E6\u53D1\uFF0C\u5373\u62F7\u8D1D\u5B8C\u6210</span>
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u62F7\u8D1D\u5B8C\u6210&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="\u521B\u5EFA\u65E5\u5FD7" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u65E5\u5FD7" aria-hidden="true">#</a> \u521B\u5EFA\u65E5\u5FD7</h2><p>\u8BBF\u95EE\u65E5\u5FD7 <code>access.log</code> \u4E00\u822C\u8BB0\u5F55\u6BCF\u4E00\u6B21\u8BF7\u6C42 <code>req</code> \u7684\u4FE1\u606F\uFF0C\u5982\u8BF7\u6C42\u65B9\u6CD5\u3001\u8BF7\u6C42\u7684\u5730\u5740\u3001\u8BF7\u6C42\u7684\u6D4F\u89C8\u5668\u4FE1\u606F\u3001\u8BF7\u6C42\u7684\u65F6\u95F4\u7B49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9E\u4F8B\u5316\u4E00\u4E2A write Stream</span>
<span class="token keyword">const</span> accessWriteStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;access.log&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    flags<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span> <span class="token comment">// append \u8FFD\u52A0\u6A21\u5F0F</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5199\u65E5\u5FD7</span>
<span class="token keyword">function</span> <span class="token function">access</span><span class="token punctuation">(</span><span class="token parameter">log</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  accessWriteStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>log <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8C03\u7528 Stream \u5BF9\u8C61\u7684 write \u65B9\u6CD5\uFF0C\u6BCF\u6B21\u5199\u5165\u4E00\u884C\u4EE3\u7801 log</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  access
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u4F7F\u7528-morgan" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-morgan" aria-hidden="true">#</a> \u4F7F\u7528 morgan</h2><p>access log \u8BB0\u5F55\u4F7F\u7528 <a href="https://www.npmjs.com/package/morgan" target="_blank" rel="noopener noreferrer">morgan \u6A21\u5757</a>\u3002</p><p>\u8BE5\u6A21\u5757\u5DF2\u7ECF\u5728\u4F7F\u7528 Express \u811A\u624B\u67B6\u642D\u5EFA\u9879\u76EE\u65F6\uFF0C\u81EA\u52A8\u5B89\u88C5\u5E76\u5F15\u5165\u5230\u9879\u76EE\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> logger <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;morgan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">logger</span><span class="token punctuation">(</span><span class="token string">&#39;dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u9ED8\u8BA4\u4EE5\u6807\u51C6\u8F93\u51FA\u5C06\u8BBF\u95EE\u65E5\u5FD7\u6253\u5370\u5728\u63A7\u5236\u53F0\u4E0A\uFF0C\u8F93\u51FA\u683C\u5F0F\u91C7\u7528 <code>dev</code> \u6A21\u5F0F\uFF0C\u5373 <code>:method :url :status :response-time ms - :res[content-length]</code>\u3002\u53EF\u4EE5\u6839\u636E\u9700\u6C42\u66F4\u6539\u53C2\u6570\uFF0C\u5982\u5F00\u53D1\u73AF\u5883\u548C\u751F\u6210\u73AF\u5883\uFF08\u6839\u636E\u73AF\u5883\u53D8\u91CF <code>p<wbr>rocess.env.NODE_ENV</code> \u5224\u65AD\uFF09\u91C7\u7528\u4E0D\u540C\u7684<a href="https://www.npmjs.com/package/morgan#predefined-formats" target="_blank" rel="noopener noreferrer">\u6A21\u5F0F</a>\u4EE5\u8F93\u51FA\u4E0D\u540C\u5185\u5BB9\u683C\u5F0F\u7684\u8BBF\u95EE\u65E5\u5FD7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> logger <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;morgan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>

<span class="token keyword">const</span> <span class="token constant">ENV</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F00\u53D1\u73AF\u5883</span>
  <span class="token comment">// \u9ED8\u8BA4\u91C7\u7528 dev \u6A21\u5F0F\uFF0C\u65E5\u5FD7\u76F4\u63A5\u8F93\u51FA\u5230\u63A7\u5236\u53F0</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">logger</span><span class="token punctuation">(</span><span class="token string">&#39;dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7EBF\u4E0A\u73AF\u5883</span>
  <span class="token keyword">const</span> logFileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;logs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;access.log&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>logFileName<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    flags<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u91C7\u7528 combined \u6A21\u5F0F\uFF0C\u65E5\u5FD7\u4EE5\u6570\u636E\u6D41 stream \u7684\u5F62\u5F0F\u5199\u5165\u5230 access.log \u6587\u6863\u4E2D</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">logger</span><span class="token punctuation">(</span><span class="token string">&#39;combined&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    stream<span class="token operator">:</span> writeStream
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u{1F4A1} \u81EA\u5B9A\u4E49\u65E5\u5FD7\u4F7F\u7528 <code>console.log</code> \u548C <code>console.error</code> \u5373\u53EF\uFF0C\u518D\u4F7F\u7528 <a href="https://pm2.keymetrics.io/" target="_blank" rel="noopener noreferrer">pm2</a> \u5DE5\u5177\u5C06\u8FD9\u4E9B\u6253\u5370\u5230\u63A7\u5236\u53F0\u7684\u81EA\u5B9A\u4E49\u65E5\u5FD7\u8F93\u51FA\u5230\u6587\u6863\u4E2D\u3002</p><h2 id="\u65E5\u5FD7\u62C6\u5206" tabindex="-1"><a class="header-anchor" href="#\u65E5\u5FD7\u62C6\u5206" aria-hidden="true">#</a> \u65E5\u5FD7\u62C6\u5206</h2><p>\u65E5\u5FD7\u5185\u5BB9\u4F1A\u6162\u6162\u7C7B\u5373\uFF0C\u6240\u6709\u8BB0\u5F55\u653E\u5728\u4E00\u4E2A\u6587\u4EF6\u540E\u671F\u4F1A\u4E0D\u597D\u5904\u7406\uFF0C\u4E00\u822C\u4F7F\u7528 shell \u811A\u672C\u6309\u7167\u4E00\u5B9A\u7684\u89C4\u5219\u5C06\u65E5\u5FD7\u62C6\u5206\u4E3A\u4E0D\u540C\u6587\u6863\u3002</p><p>\u62F7\u8D1D\u65E5\u5FD7\u6587\u4EF6\u5E76\u91CD\u547D\u540D\u4E3A\u5BF9\u5E94\u7684\u683C\u5F0F\uFF0C\u4E00\u822C\u6309\u65F6\u95F4\u5212\u5206\u65E5\u5FD7\u6587\u4EF6\uFF0C\u5982\u6309\u7167 <code>yyyy-dd.access.log</code> \u7684\u89C4\u5219\u6765\u521B\u5EFA\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token builtin class-name">cd</span> /Users/project/logs
<span class="token function">cp</span> access.log $<span class="token punctuation">{</span>date +%Y-%m-%d<span class="token punctuation">)</span>.access.log
<span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span> <span class="token operator">&gt;</span> access.log
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F7F\u7528 Linux \u7684 <code>crontab</code> \u547D\u4EE4\u5B9E\u73B0\u5B9A\u65F6\u4EFB\u52A1\uFF0C\u5B9A\u65F6\u5BF9\u65E5\u5FD7\u8FDB\u884C\u62C6\u5206\u3002crontab \u5B9A\u65F6\u4EFB\u52A1\u7684\u683C\u5F0F\u4E3A <code>***** command</code> \u6BCF\u4E2A <code>*</code> \u5360\u4F4D\u7B26\u4F9D\u6B21\u8868\u793A \u5206\u949F\u3001\u5C0F\u65F6\u3001\u65E5\u671F\u3001\u6708\u4EFD\u3001\u661F\u671F\uFF080~6\uFF09\uFF1B<code>command</code> \u662F\u4E00\u4E2A\u62F7\u8D1D\u65E5\u5FD7\u7B49\u547D\u4EE4\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u7F16\u8F91 crontab \u5B9A\u65F6\u4EFB\u52A1</span>
<span class="token function">crontab</span> -e
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6BCF\u5929 0 \u70B9\u6267\u884C\u65E5\u5FD7\u62C6\u5206\u4EFB\u52A1</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>* <span class="token number">0</span> * * * * <span class="token function">sh</span> /path/shellFile
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u{1F4A1} \u53EF\u4EE5\u5728\u7EC8\u7AEF\u8F93\u5165\u547D\u4EE4 <code>crontab -l</code> \u67E5\u770B\u6240\u6709 crontab \u5B9A\u65F6\u4EFB\u52A1\u3002</p><h2 id="\u5206\u6790\u65E5\u5FD7" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790\u65E5\u5FD7" aria-hidden="true">#</a> \u5206\u6790\u65E5\u5FD7</h2><p>\u65E5\u5FD7\u5185\u5BB9\u4E00\u822C\u662F\u6309\u884C\u5B58\u50A8\u7684\uFF0C\u4E00\u884C\u5C31\u662F\u4E00\u6761\u65E5\u5FD7\uFF0C\u53EF\u4EE5\u4F7F\u7528 Node.js \u7684\u547D\u4EE4 <code>readline</code> \u57FA\u4E8E stream \u4E00\u884C\u884C\u5730\u8BFB\u53D6\u5B8C\u6574\u7684\u65E5\u5FD7\uFF0C\u5E76\u83B7\u53D6\u6240\u9700\u7684\u4FE1\u606F\uFF0C\u7528\u4E8E\u540E\u7EED\u7684\u5206\u6790\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u5206\u6790\u6240\u6709\u8BF7\u6C42\u4E2D\u4F7F\u7528 Chrome \u6D4F\u89C8\u5668\u7684\u5360\u6BD4
 */</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> readline <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;readline&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E5\u5FD7\u6587\u4EF6\u8DEF\u5F84</span>
<span class="token keyword">const</span> fileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;../&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;logs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;access.log&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA read Stream \u5B9E\u4F8B</span>
<span class="token keyword">const</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>

<span class="token comment">// \u521B\u5EFA readline \u5BF9\u8C61</span>
<span class="token keyword">const</span> rl <span class="token operator">=</span> readline<span class="token punctuation">.</span><span class="token function">createInterface</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  input<span class="token operator">:</span> readStream
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> chromeNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// \u9010\u884C\u8BFB\u53D6</span>
rl<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;line&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">lineData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6392\u9664\u7A7A\u884C</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>lineData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BB0\u5F55\u603B\u884C\u6570</span>
  num<span class="token operator">++</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> arr <span class="token operator">=</span> lineData<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; -- &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;Chrome&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7D2F\u52A0 chrome \u7684\u8BF7\u6C42\u6570\u91CF</span>
    chromeNum<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u76D1\u542C\u5B8C\u6210</span>
rl<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;chrome \u5360\u6BD4\uFF1A&#39;</span> <span class="token operator">+</span> chromeNum <span class="token operator">/</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div>`,37);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
